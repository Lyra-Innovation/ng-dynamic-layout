{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dynamic-layout/components/configurable/base.configurable.ts","webpack:///./src/app/dynamic-layout/components/configurable/configurable-sidenav/configurable-sidenav.component.css","webpack:///./src/app/dynamic-layout/components/configurable/configurable-sidenav/configurable-sidenav.component.html","webpack:///./src/app/dynamic-layout/components/configurable/configurable-sidenav/configurable-sidenav.component.ts","webpack:///./src/app/dynamic-layout/components/configurable/configurable-tabs/configurable-tabs.component.css","webpack:///./src/app/dynamic-layout/components/configurable/configurable-tabs/configurable-tabs.component.html","webpack:///./src/app/dynamic-layout/components/configurable/configurable-tabs/configurable-tabs.component.ts","webpack:///./src/app/dynamic-layout/components/editing-toolbar/editing-toolbar.component.css","webpack:///./src/app/dynamic-layout/components/editing-toolbar/editing-toolbar.component.html","webpack:///./src/app/dynamic-layout/components/editing-toolbar/editing-toolbar.component.ts","webpack:///./src/app/dynamic-layout/components/new-variable/new-variable.component.css","webpack:///./src/app/dynamic-layout/components/new-variable/new-variable.component.html","webpack:///./src/app/dynamic-layout/components/new-variable/new-variable.component.ts","webpack:///./src/app/dynamic-layout/containers/component-config/component-config.component.css","webpack:///./src/app/dynamic-layout/containers/component-config/component-config.component.html","webpack:///./src/app/dynamic-layout/containers/component-config/component-config.component.ts","webpack:///./src/app/dynamic-layout/containers/component-container/component-container.component.css","webpack:///./src/app/dynamic-layout/containers/component-container/component-container.component.html","webpack:///./src/app/dynamic-layout/containers/component-container/component-container.component.ts","webpack:///./src/app/dynamic-layout/containers/dynamic-container/dynamic-container.component.css","webpack:///./src/app/dynamic-layout/containers/dynamic-container/dynamic-container.component.html","webpack:///./src/app/dynamic-layout/containers/dynamic-container/dynamic-container.component.ts","webpack:///./src/app/dynamic-layout/containers/dynamic-layout/dynamic-layout.component.css","webpack:///./src/app/dynamic-layout/containers/dynamic-layout/dynamic-layout.component.html","webpack:///./src/app/dynamic-layout/containers/dynamic-layout/dynamic-layout.component.ts","webpack:///./src/app/dynamic-layout/containers/page-container/page-container.component.css","webpack:///./src/app/dynamic-layout/containers/page-container/page-container.component.html","webpack:///./src/app/dynamic-layout/containers/page-container/page-container.component.ts","webpack:///./src/app/dynamic-layout/dynamic-layout.module.ts","webpack:///./src/app/dynamic-layout/host.directive.ts","webpack:///./src/app/dynamic-layout/services/component-resolver.service.ts","webpack:///./src/app/dynamic-layout/services/page-layout.service.ts","webpack:///./src/app/dynamic-layout/state/page-layout.actions.ts","webpack:///./src/app/dynamic-layout/state/page-layout.effects.ts","webpack:///./src/app/dynamic-layout/state/page-layout.model.ts","webpack:///./src/app/dynamic-layout/state/page-layout.reducer.ts","webpack:///./src/app/example-input/example-input.component.css","webpack:///./src/app/example-input/example-input.component.html","webpack:///./src/app/example-input/example-input.component.ts","webpack:///./src/app/example/example.component.css","webpack:///./src/app/example/example.component.html","webpack:///./src/app/example/example.component.ts","webpack:///./src/app/state/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<dl-page-container style=\\\"height: 100%;\\\" page=\\\"id1\\\"></dl-page-container>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ComponentFactoryResolver } from '@angular/core';\nimport { ExampleComponent } from './example/example.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-dynamic-layout';\n\n  constructor() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatFormFieldModule,\n  MatInputModule\n} from '@angular/material';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from './state';\nimport { EffectsModule } from '@ngrx/effects';\nimport { environment } from 'src/environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { DynamicLayoutModule } from './dynamic-layout/dynamic-layout.module';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ExampleComponent } from './example/example.component';\nimport { ExampleInputComponent } from './example-input/example-input.component';\n\n@NgModule({\n  declarations: [AppComponent, ExampleComponent, ExampleInputComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    DragDropModule,\n    DynamicLayoutModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production\n    }),\n    StoreRouterConnectingModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ExampleComponent, ExampleInputComponent]\n})\nexport class AppModule {}\n","import {\n  ConfigurableLayout,\n  LayoutConfig\n} from '../../state/page-layout.model';\n\nexport abstract class BaseConfigurableLayout<CHILDREN_CONFIG>\n  implements ConfigurableLayout<CHILDREN_CONFIG> {\n  protected pageId: string;\n  protected editingMode = false;\n  protected layoutConfig: LayoutConfig<CHILDREN_CONFIG>;\n\n  /**\n   * Initializes the basic properties of this layout\n   * Should only be called once at the component initialization process\n   */\n  public initComponent(\n    pageId: string,\n    layoutConfig: LayoutConfig<CHILDREN_CONFIG>\n  ): void {\n    this.pageId = pageId;\n\n    this.layoutConfig = layoutConfig;\n    if (!this.layoutConfig.children) {\n      this.layoutConfig.children = [];\n      this.addChild();\n    }\n  }\n\n  /**\n   * Sets the current editing mode\n   * Can be called anytime\n   */\n  public setEditingMode(editingMode: boolean): void {\n    this.editingMode = editingMode;\n  }\n\n  protected abstract buildNewChildConfig(): CHILDREN_CONFIG;\n\n  /**\n   * Adds a new child to the array, requesting the initial child configuration\n   */\n  protected addChild() {\n    this.layoutConfig.children.push({\n      config: this.buildNewChildConfig(),\n      component: {\n        component: null\n      }\n    });\n  }\n\n  /**\n   * Removes the child with the given object in the child array\n   */\n  protected removeChild(child) {\n    this.layoutConfig.children.splice(\n      this.layoutConfig.children.indexOf(child),\n      1\n    );\n  }\n}\n","module.exports = \"dl-configurable-sidenav {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHluYW1pYy1sYXlvdXQvY29tcG9uZW50cy9jb25maWd1cmFibGUvY29uZmlndXJhYmxlLXNpZGVuYXYvY29uZmlndXJhYmxlLXNpZGVuYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixZQUFZO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9keW5hbWljLWxheW91dC9jb21wb25lbnRzL2NvbmZpZ3VyYWJsZS9jb25maWd1cmFibGUtc2lkZW5hdi9jb25maWd1cmFibGUtc2lkZW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGwtY29uZmlndXJhYmxlLXNpZGVuYXYge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container fxFill>\\n  <mat-sidenav mode=\\\"side\\\" [opened]=\\\"true\\\">\\n    <ng-container *ngIf=\\\"!editingMode\\\">\\n      <mat-nav-list>\\n        <ng-container *ngFor=\\\"let child of layoutConfig.children\\\">\\n          <a mat-list-item (click)=\\\"selectedChild = child.component\\\">\\n            {{ child.config.name }}\\n          </a>\\n        </ng-container>\\n      </mat-nav-list>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"editingMode\\\">\\n      <div fxLayout=\\\"column\\\">\\n        <mat-nav-list>\\n          <ng-container *ngFor=\\\"let child of layoutConfig.children\\\">\\n            <a mat-list-item (click)=\\\"selectedChild = child.component\\\">\\n              <mat-form-field floatLabel=\\\"never\\\">\\n                <input\\n                  matInput\\n                  placeholder=\\\"routeName\\\"\\n                  [(ngModel)]=\\\"child.config.name\\\"\\n                />\\n              </mat-form-field>\\n              <button mat-icon-button (click)=\\\"removeChild(child)\\\">\\n                <mat-icon> close </mat-icon>\\n              </button>\\n            </a>\\n          </ng-container>\\n        </mat-nav-list>\\n\\n        <button fxFlex mat-button (click)=\\\"addChild()\\\">\\n          <mat-icon>add</mat-icon>\\n          Add route\\n        </button>\\n      </div>\\n    </ng-container>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <dl-dynamic-layout\\n      fxFill\\n      [pageId]=\\\"pageId\\\"\\n      [editingMode]=\\\"editingMode\\\"\\n      [layoutConfig]=\\\"selectedChild\\\"\\n    ></dl-dynamic-layout>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { BaseConfigurableLayout } from '../base.configurable';\nimport {\n  DynamicLayoutConfig,\n  LayoutConfig\n} from 'src/app/dynamic-layout/state/page-layout.model';\n\n@Component({\n  selector: 'dl-configurable-sidenav',\n  templateUrl: './configurable-sidenav.component.html',\n  styleUrls: ['./configurable-sidenav.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ConfigurableSidenavComponent\n  extends BaseConfigurableLayout<{\n    name: string;\n  }>\n  implements OnInit {\n  selectedChild: DynamicLayoutConfig;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {}\n\n  public initComponent(\n    pageId: string,\n    layoutConfig: LayoutConfig<{ name: string }>\n  ) {\n    super.initComponent(pageId, layoutConfig);\n    this.selectedChild = this.layoutConfig.children[0].component;\n  }\n\n  protected buildNewChildConfig() {\n    return {\n      name: ''\n    };\n  }\n}\n","module.exports = \".mat-tab-label,\\n.mat-tab-disabled {\\n  color: black !important;\\n  min-width: auto !important;\\n}\\n\\n.mat-tab-body-wrapper {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\ndl-configurable-tabs {\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHluYW1pYy1sYXlvdXQvY29tcG9uZW50cy9jb25maWd1cmFibGUvY29uZmlndXJhYmxlLXRhYnMvY29uZmlndXJhYmxlLXRhYnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSx3QkFBd0I7RUFDeEIsMkJBQTJCO0NBQzVCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLFlBQVk7Q0FDYjs7QUFFRDtFQUNFLGFBQWE7RUFDYixZQUFZO0NBQ2IiLCJmaWxlIjoic3JjL2FwcC9keW5hbWljLWxheW91dC9jb21wb25lbnRzL2NvbmZpZ3VyYWJsZS9jb25maWd1cmFibGUtdGFicy9jb25maWd1cmFibGUtdGFicy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItbGFiZWwsXG4ubWF0LXRhYi1kaXNhYmxlZCB7XG4gIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICBtaW4td2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLm1hdC10YWItYm9keS13cmFwcGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuZGwtY29uZmlndXJhYmxlLXRhYnMge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuIl19 */\"","module.exports = \"<ng-container *ngIf=\\\"editingMode\\\">\\n  <mat-tab-group fxFill>\\n    <ng-container *ngFor=\\\"let child of layoutConfig.children\\\">\\n      <mat-tab>\\n        <ng-template mat-tab-label>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"4px\\\">\\n            <mat-form-field floatLabel=\\\"never\\\" (click)=\\\"$event.preventDefault()\\\">\\n              <input\\n                matInput\\n                placeholder=\\\"Tab name\\\"\\n                [(ngModel)]=\\\"child.config.name\\\"\\n                (keydown)=\\\"$event.stopPropagation()\\\"\\n              />\\n            </mat-form-field>\\n            <button\\n              mat-icon-button\\n              [disabled]=\\\"layoutConfig.children.length === 1\\\"\\n              (click)=\\\"removeChild(child)\\\"\\n            >\\n              <mat-icon>close</mat-icon>\\n            </button>\\n          </div>\\n        </ng-template>\\n\\n        <dl-dynamic-layout\\n          fxFill\\n          [pageId]=\\\"pageId\\\"\\n          [editingMode]=\\\"editingMode\\\"\\n          [layoutConfig]=\\\"child.component\\\"\\n        ></dl-dynamic-layout>\\n      </mat-tab>\\n    </ng-container>\\n\\n    <mat-tab disabled>\\n      <ng-template mat-tab-label>\\n        <button mat-icon-button (click)=\\\"addChild()\\\">\\n          <mat-icon> add </mat-icon>\\n        </button>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!editingMode\\\">\\n  <mat-tab-group fxFill>\\n    <ng-container *ngFor=\\\"let child of layoutConfig.children\\\">\\n      <mat-tab [label]=\\\"child.config.name\\\">\\n        <dl-dynamic-layout\\n          fxFill\\n          [pageId]=\\\"pageId\\\"\\n          [editingMode]=\\\"editingMode\\\"\\n          [layoutConfig]=\\\"child.component\\\"\\n        ></dl-dynamic-layout>\\n      </mat-tab>\\n    </ng-container>\\n  </mat-tab-group>\\n</ng-container>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport {\n  LayoutConfig,\n  ConfigurableLayout\n} from 'src/app/dynamic-layout/state/page-layout.model';\nimport { BaseConfigurableLayout } from '../base.configurable';\n\n@Component({\n  selector: 'dl-configurable-tabs',\n  templateUrl: './configurable-tabs.component.html',\n  styleUrls: ['./configurable-tabs.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ConfigurableTabsComponent\n  extends BaseConfigurableLayout<{ name: string }>\n  implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {}\n\n  protected buildNewChildConfig() {\n    return {\n      name: ''\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbXBvbmVudHMvZWRpdGluZy10b29sYmFyL2VkaXRpbmctdG9vbGJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"8px\\\">\\n  <ng-container *ngIf=\\\"!editingMode\\\">\\n    <button mat-button (click)=\\\"turnOnEditing.emit()\\\">\\n      <mat-icon>edit</mat-icon>\\n      Edit layout\\n    </button>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"editingMode\\\">\\n    <button\\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      (click)=\\\"saveLayoutChanges.emit()\\\"\\n    >\\n      <mat-icon>save</mat-icon>\\n      Save layout\\n    </button>\\n    <button\\n      mat-raised-button\\n      color=\\\"secondary\\\"\\n      (click)=\\\"discardLayoutChanges.emit()\\\"\\n    >\\n      <mat-icon>close</mat-icon>\\n      Discard changes\\n    </button>\\n  </ng-container>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'dl-editing-toolbar',\n  templateUrl: './editing-toolbar.component.html',\n  styleUrls: ['./editing-toolbar.component.css']\n})\nexport class EditingToolbarComponent implements OnInit {\n  @Input()\n  editingMode: boolean;\n\n  @Output()\n  turnOnEditing = new EventEmitter<void>();\n\n  @Output()\n  saveLayoutChanges = new EventEmitter<void>();\n\n  @Output()\n  discardLayoutChanges = new EventEmitter<void>();\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".mat-dialog-container {\\n  padding: 0;\\n}\\n\\n.dialog-content {\\n  padding: 24px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHluYW1pYy1sYXlvdXQvY29tcG9uZW50cy9uZXctdmFyaWFibGUvbmV3LXZhcmlhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxjQUFjO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9keW5hbWljLWxheW91dC9jb21wb25lbnRzL25ldy12YXJpYWJsZS9uZXctdmFyaWFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5kaWFsb2ctY29udGVudCB7XG4gIHBhZGRpbmc6IDI0cHg7XG59XG4iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <button mat-icon-button (click)=\\\"cancel()\\\"><mat-icon>close</mat-icon></button>\\n\\n    <mat-label fxFlex>Add new variable</mat-label>\\n\\n    <button\\n      mat-raised-button\\n      (click)=\\\"addNewVariable()\\\"\\n      [disabled]=\\\"!variableName\\\"\\n      color=\\\"secondary\\\"\\n    >\\n      ADD VARIABLE\\n    </button>\\n  </mat-toolbar>\\n\\n  <div fxLayoutAlign=\\\"center center\\\" class=\\\"dialog-content\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n      <mat-label>Variable name</mat-label>\\n      <input matInput [(ngModel)]=\\\"variableName\\\" />\\n    </mat-form-field>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'dl-new-variable',\n  templateUrl: './new-variable.component.html',\n  styleUrls: ['./new-variable.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewVariableComponent implements OnInit {\n  variableName: string;\n\n  constructor(public dialogRef: MatDialogRef<NewVariableComponent>) {}\n\n  ngOnInit() {}\n\n  cancel() {\n    this.dialogRef.close();\n  }\n\n  addNewVariable() {\n    this.dialogRef.close(this.variableName);\n  }\n}\n","module.exports = \".mat-form-field-wrapper {\\n  padding-bottom: 0;\\n}\\n\\nhr {\\n  margin: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHluYW1pYy1sYXlvdXQvY29udGFpbmVycy9jb21wb25lbnQtY29uZmlnL2NvbXBvbmVudC1jb25maWcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtDQUNuQjs7QUFFRDtFQUNFLFVBQVU7Q0FDWCIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbnRhaW5lcnMvY29tcG9uZW50LWNvbmZpZy9jb21wb25lbnQtY29uZmlnLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG5ociB7XG4gIG1hcmdpbjogMDtcbn1cbiJdfQ== */\"","module.exports = \"<mat-card fxFlex fxLayout=\\\"row\\\" fxLayoutGap=\\\"8px\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex>\\n    <h3>Inputs</h3>\\n    <div\\n      *ngFor=\\\"let input of (bindings.inputs | keyvalue)\\\"\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center start\\\"\\n      fxLayoutGap=\\\"8px\\\"\\n    >\\n      <mat-checkbox\\n        [value]=\\\"_componentConfig.bindings.inputs[input]\\\"\\n        (change)=\\\"toggleBinding($event, 'inputs', input.key)\\\"\\n      >\\n        {{ input.key }}\\n      </mat-checkbox>\\n      <div\\n        *ngIf=\\\"_componentConfig.bindings.inputs[input.key]\\\"\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n        fxLayoutGap=\\\"8px\\\"\\n      >\\n        <mat-radio-group\\n          [(ngModel)]=\\\"input.value.type\\\"\\n          fxLayout=\\\"column\\\"\\n          fxLayoutGap=\\\"4px\\\"\\n        >\\n          <mat-radio-button [value]=\\\"BindingType.CONSTANT\\\">\\n            Constant\\n          </mat-radio-button>\\n          <mat-radio-button [value]=\\\"BindingType.VARIABLE\\\">\\n            Variable\\n          </mat-radio-button>\\n        </mat-radio-group>\\n\\n        <mat-form-field\\n          *ngIf=\\\"input.value.type === BindingType.VARIABLE\\\"\\n          appearance=\\\"outline\\\"\\n        >\\n          <mat-label>Variable Name</mat-label>\\n          <mat-select [(ngModel)]=\\\"input.value.value\\\">\\n            <mat-option\\n              *ngFor=\\\"let variable of (pageVariables$ | async)\\\"\\n              [value]=\\\"variable\\\"\\n            >\\n              {{ variable }}\\n            </mat-option>\\n            <hr />\\n            <mat-option (click)=\\\"addNewVariable()\\\">\\n              <mat-icon>add</mat-icon>\\n              New variable\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field\\n          *ngIf=\\\"input.value.type === BindingType.CONSTANT\\\"\\n          appearance=\\\"outline\\\"\\n        >\\n          <mat-label>Constant</mat-label>\\n          <input matInput [(ngModel)]=\\\"input.value.value\\\" />\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <ng-container *ngIf=\\\"objectEmpty(bindings.inputs)\\\">\\n      <mat-label>This component has no input properties</mat-label>\\n    </ng-container>\\n  </div>\\n\\n  <div fxLayout=\\\"column\\\" fxFlex>\\n    <h3>Outputs</h3>\\n    <div\\n      *ngFor=\\\"let output of (bindings.outputs | keyvalue)\\\"\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center start\\\"\\n      fxLayoutGap=\\\"8px\\\"\\n    >\\n      <mat-checkbox\\n        [value]=\\\"_componentConfig.bindings.outputs[output.key]\\\"\\n        (change)=\\\"toggleBinding($event, 'outputs', output.key)\\\"\\n      >\\n        {{ output.key }}\\n      </mat-checkbox>\\n      <div\\n        *ngIf=\\\"_componentConfig.bindings.outputs[output.key]\\\"\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n        fxLayoutGap=\\\"8px\\\"\\n      >\\n        <mat-radio-group\\n          [(ngModel)]=\\\"output.value.type\\\"\\n          fxLayout=\\\"column\\\"\\n          fxLayoutGap=\\\"4px\\\"\\n        >\\n          <mat-radio-button [value]=\\\"BindingType.VARIABLE\\\">\\n            Variable\\n          </mat-radio-button>\\n        </mat-radio-group>\\n\\n        <mat-form-field\\n          *ngIf=\\\"output.value.type === BindingType.VARIABLE\\\"\\n          appearance=\\\"outline\\\"\\n        >\\n          <mat-label>Variable Name</mat-label>\\n          <mat-select [(ngModel)]=\\\"output.value.value\\\">\\n            <mat-option\\n              *ngFor=\\\"let variable of (pageVariables$ | async)\\\"\\n              [value]=\\\"variable\\\"\\n            >\\n              {{ variable }}\\n            </mat-option>\\n            <hr />\\n            <mat-option (click)=\\\"addNewVariable()\\\">\\n              <mat-icon>add</mat-icon>\\n              New variable\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"objectEmpty(bindings.outputs)\\\">\\n      <mat-label>This component has no output properties</mat-label>\\n    </ng-container>\\n  </div>\\n</mat-card>\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  Type,\n  ComponentFactoryResolver,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ComponentConfig,\n  Binding,\n  BindingType\n} from '../../state/page-layout.model';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport * as fromLayout from '../../state/page-layout.reducer';\nimport { Dictionary } from '@ngrx/entity';\nimport { MatCheckboxChange, MatDialog } from '@angular/material';\nimport { NewVariableComponent } from '../../components/new-variable/new-variable.component';\nimport { AddNewVariable } from '../../state/page-layout.actions';\nimport { ComponentResolverService } from '../../services/component-resolver.service';\n\n@Component({\n  selector: 'dl-component-config',\n  templateUrl: './component-config.component.html',\n  styleUrls: ['./component-config.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ComponentConfigComponent implements OnInit {\n  @Input()\n  pageId: string;\n\n  _componentConfig: ComponentConfig;\n  @Input()\n  set componentConfig(componentConfig: ComponentConfig) {\n    if (!componentConfig.bindings) {\n      componentConfig.bindings = {\n        inputs: {},\n        outputs: {}\n      };\n    }\n\n    this._componentConfig = componentConfig;\n    this.setupComponentBindings(componentConfig.type);\n  }\n\n  pageVariables$: Observable<string[]>;\n\n  BindingType = BindingType;\n  bindings: {\n    inputs: Dictionary<Binding>;\n    outputs: Dictionary<Binding>;\n  };\n\n  objectEmpty = (object: any) => Object.keys(object).length === 0;\n\n  constructor(\n    private store: Store<fromLayout.LayoutState>,\n    private componentResolver: ComponentResolverService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.pageVariables$ = this.store.select(\n      fromLayout.selectVariablesNames(this.pageId)\n    );\n  }\n\n  setupComponentBindings(componentClassName: string) {\n    const factory = this.componentResolver.getComponentFactory(\n      componentClassName\n    );\n\n    const inputBindings = factory.inputs.reduce(\n      (propertiesObject, newProperty) => ({\n        ...propertiesObject,\n        [newProperty.propName]: this._componentConfig.bindings.inputs[\n          newProperty.propName\n        ] || {\n          type: BindingType.CONSTANT,\n          value: ''\n        }\n      }),\n      {}\n    );\n    const outputBindings = factory.outputs.reduce(\n      (propertiesObject, newProperty) => ({\n        ...propertiesObject,\n        [newProperty.propName]: this._componentConfig.bindings.outputs[\n          newProperty.propName\n        ] || {\n          type: BindingType.VARIABLE,\n          value: ''\n        }\n      }),\n      {}\n    );\n\n    this.bindings = {\n      inputs: inputBindings,\n      outputs: outputBindings\n    };\n  }\n\n  toggleBinding(\n    checkEvent: MatCheckboxChange,\n    bindingsType: 'inputs' | 'outputs',\n    bindingKey: string\n  ) {\n    if (checkEvent.checked) {\n      this._componentConfig.bindings[bindingsType][bindingKey] = this.bindings[\n        bindingsType\n      ][bindingKey];\n    } else {\n      delete this._componentConfig.bindings[bindingsType][bindingKey];\n    }\n  }\n\n  addNewVariable() {\n    const dialogRef = this.dialog.open(NewVariableComponent, {\n      minWidth: '400px',\n      minHeight: '200px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.store.dispatch(\n          new AddNewVariable({ pageId: this.pageId, variableName: result })\n        );\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbnRhaW5lcnMvY29tcG9uZW50LWNvbnRhaW5lci9jb21wb25lbnQtY29udGFpbmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div fxLayoutAlign=\\\"center center\\\" fxFlex><ng-template host></ng-template></div>\\n\"","import {\n  Component,\n  Input,\n  ComponentRef,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n  EventEmitter,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  ComponentConfig,\n  BindingType,\n  ConfigurableLayout,\n  LayoutConfig\n} from '../../state/page-layout.model';\nimport * as fromLayout from '../../state/page-layout.reducer';\nimport { Store } from '@ngrx/store';\nimport { HostDirective } from '../../host.directive';\nimport { Dictionary } from '@ngrx/entity';\nimport { Observable, Subscription } from 'rxjs';\nimport { UpdateVariableValue } from '../../state/page-layout.actions';\nimport { ComponentResolverService } from '../../services/component-resolver.service';\n\n@Component({\n  selector: 'dl-component-container',\n  templateUrl: './component-container.component.html',\n  styleUrls: ['./component-container.component.css']\n})\nexport class ComponentContainerComponent implements AfterViewInit, OnDestroy {\n  @Input()\n  pageId: string;\n\n  _componentConfig: ComponentConfig;\n  @Input()\n  set componentConfig(componentConfig: ComponentConfig) {\n    this._componentConfig = componentConfig;\n\n    if (this.componentRef) {\n      this.buildComponent(componentConfig);\n    }\n  }\n\n  _editingMode: boolean;\n  @Input()\n  set editingMode(editingMode: boolean) {\n    this._editingMode = editingMode;\n    if (\n      this.componentRef &&\n      this.componentResolver.isComponentConfigurable(this._componentConfig.type)\n    ) {\n      (<ConfigurableLayout<any>>this.componentRef.instance).setEditingMode(\n        editingMode\n      );\n    }\n  }\n\n  @ViewChild(HostDirective)\n  container: HostDirective;\n\n  componentRef: ComponentRef<any>;\n\n  variableValues: Dictionary<Observable<any>>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    private store: Store<fromLayout.LayoutState>,\n    private componentResolver: ComponentResolverService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.buildComponent(this._componentConfig);\n  }\n\n  buildComponent(componentConfig: ComponentConfig) {\n    if (!componentConfig.bindings) {\n      componentConfig.bindings = {\n        inputs: {},\n        outputs: {}\n      };\n    }\n\n    const factory = this.componentResolver.getComponentFactory(\n      componentConfig.type\n    );\n\n    this.container.viewContainerRef.clear();\n    this.componentRef = this.container.viewContainerRef.createComponent(\n      factory\n    );\n\n    if (this.componentResolver.isComponentConfigurable(componentConfig.type)) {\n      (<ConfigurableLayout<any>>this.componentRef.instance).initComponent(\n        this.pageId,\n        <LayoutConfig<any>>componentConfig\n      );\n      (<ConfigurableLayout<any>>this.componentRef.instance).setEditingMode(\n        this._editingMode\n      );\n    }\n\n    for (const inputKey of Object.keys(componentConfig.bindings.inputs)) {\n      if (\n        componentConfig.bindings.inputs[inputKey].type === BindingType.VARIABLE\n      ) {\n        const variableName = componentConfig.bindings.inputs[inputKey].value;\n        const subs = this.store\n          .select(fromLayout.selectVariableValue(this.pageId, variableName))\n          .subscribe(value => (this.componentRef.instance[inputKey] = value));\n        this.subscriptions.push(subs);\n      } else {\n        this.componentRef.instance[inputKey] =\n          componentConfig.bindings.inputs[inputKey].value;\n      }\n    }\n\n    for (const outputKey of Object.keys(componentConfig.bindings.outputs)) {\n      const variableName = componentConfig.bindings.outputs[outputKey].value;\n      const subs = (<EventEmitter<any>>(\n        this.componentRef.instance[outputKey]\n      )).subscribe(value =>\n        this.store.dispatch(\n          new UpdateVariableValue({\n            pageId: this.pageId,\n            variableName: variableName,\n            variableValue: value\n          })\n        )\n      );\n      this.subscriptions.push(subs);\n    }\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subs => subs.unsubscribe);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbnRhaW5lcnMvZHluYW1pYy1jb250YWluZXIvZHluYW1pYy1jb250YWluZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"componentConfig\\\" fxFill fxLayoutAlign=\\\"center center\\\">\\n  <ng-container *ngIf=\\\"showComponentConfiguration()\\\">\\n    <dl-component-config\\n      fxFill\\n      [pageId]=\\\"pageId\\\"\\n      [componentConfig]=\\\"componentConfig\\\"\\n    ></dl-component-config>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"!showComponentConfiguration()\\\">\\n    <dl-component-container\\n      fxFill\\n      [pageId]=\\\"pageId\\\"\\n      [editingMode]=\\\"editingMode\\\"\\n      [componentConfig]=\\\"componentConfig\\\"\\n    ></dl-component-container>\\n  </ng-container>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ComponentConfig } from '../../state/page-layout.model';\nimport { ComponentResolverService } from '../../services/component-resolver.service';\n\n@Component({\n  selector: 'dl-dynamic-container',\n  templateUrl: './dynamic-container.component.html',\n  styleUrls: ['./dynamic-container.component.css']\n})\nexport class DynamicContainerComponent implements OnInit {\n  @Input()\n  pageId: string;\n\n  @Input()\n  componentConfig: ComponentConfig;\n\n  @Input()\n  editingMode: boolean;\n\n  @Input()\n  configuringMode: boolean;\n\n  constructor(private componentResolver: ComponentResolverService) {}\n\n  ngOnInit() {}\n\n  showComponentConfiguration(): boolean {\n    if (\n      this.componentResolver.isComponentConfigurable(this.componentConfig.type)\n    ) {\n      return this.editingMode && this.configuringMode;\n    } else {\n      return this.editingMode;\n    }\n  }\n}\n","module.exports = \".container {\\n}\\n\\n.editing-container {\\n  border: 1px solid black;\\n  background: lightgrey;\\n}\\n\\n.toolbar {\\n  padding-left: 32px;\\n  padding-right: 16px;\\n}\\n\\n.component-selector {\\n  margin-top: 8px;\\n  width: 16em;\\n}\\n\\n.vertical-split .mat-icon {\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg);\\n}\\n\\n.child-container {\\n  padding: 32px;\\n  padding-top: 0px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHluYW1pYy1sYXlvdXQvY29udGFpbmVycy9keW5hbWljLWxheW91dC9keW5hbWljLWxheW91dC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0M7O0FBRUQ7RUFDRSx3QkFBd0I7RUFDeEIsc0JBQXNCO0NBQ3ZCOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLG9CQUFvQjtDQUNyQjs7QUFFRDtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0NBQ2I7O0FBRUQ7RUFDRSxpQ0FBeUI7VUFBekIseUJBQXlCO0NBQzFCOztBQUVEO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtDQUNsQiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbnRhaW5lcnMvZHluYW1pYy1sYXlvdXQvZHluYW1pYy1sYXlvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xufVxuXG4uZWRpdGluZy1jb250YWluZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgYmFja2dyb3VuZDogbGlnaHRncmV5O1xufVxuXG4udG9vbGJhciB7XG4gIHBhZGRpbmctbGVmdDogMzJweDtcbiAgcGFkZGluZy1yaWdodDogMTZweDtcbn1cblxuLmNvbXBvbmVudC1zZWxlY3RvciB7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAgd2lkdGg6IDE2ZW07XG59XG5cbi52ZXJ0aWNhbC1zcGxpdCAubWF0LWljb24ge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG59XG5cbi5jaGlsZC1jb250YWluZXIge1xuICBwYWRkaW5nOiAzMnB4O1xuICBwYWRkaW5nLXRvcDogMHB4O1xufVxuIl19 */\"","module.exports = \"<div fxFlex fxLayout=\\\"column\\\">\\n  <ng-container *ngIf=\\\"!layoutConfig.children\\\">\\n    <div\\n      [ngClass]=\\\"{ 'editing-container': editingMode }\\\"\\n      fxFlex\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"start stretch\\\"\\n    >\\n      <div\\n        *ngIf=\\\"editingMode\\\"\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"center center\\\"\\n        class=\\\"toolbar\\\"\\n      >\\n        <div fxLayout=\\\"row\\\" fxFlex fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field class=\\\"component-selector\\\">\\n            <mat-label>Component</mat-label>\\n            <mat-select\\n              [value]=\\\"layoutConfig.component?.type\\\"\\n              (valueChange)=\\\"selectComponent($event)\\\"\\n            >\\n              <mat-option></mat-option>\\n              <mat-option\\n                *ngFor=\\\"let component of (availableComponents$ | async)\\\"\\n                [value]=\\\"component\\\"\\n              >\\n                {{ component }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-slide-toggle\\n            *ngIf=\\\"isComponentConfigurable()\\\"\\n            [(ngModel)]=\\\"configureComponent\\\"\\n          >\\n            Configure component\\n          </mat-slide-toggle>\\n\\n          <button\\n            mat-icon-button\\n            (click)=\\\"splitLayout(false)\\\"\\n            class=\\\"vertical-split\\\"\\n          >\\n            <mat-icon>view_agenda</mat-icon>\\n          </button>\\n          <button mat-icon-button (click)=\\\"splitLayout(true)\\\">\\n            <mat-icon>view_agenda</mat-icon>\\n          </button>\\n          <button\\n            mat-icon-button\\n            [disabled]=\\\"!childLayout\\\"\\n            (click)=\\\"deleteSelf.emit()\\\"\\n          >\\n            <mat-icon>close</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n\\n      <!-- If layout does not have children and is not editing, display the component -->\\n      <div\\n        *ngIf=\\\"layoutConfig.component\\\"\\n        fxFlex\\n        fxLayoutAlign=\\\"center center\\\"\\n        [ngClass]=\\\"{ 'child-container': editingMode }\\\"\\n      >\\n        <dl-dynamic-container\\n          fxFill\\n          fxLayoutAlign=\\\"center center\\\"\\n          [pageId]=\\\"pageId\\\"\\n          [editingMode]=\\\"editingMode\\\"\\n          [configuringMode]=\\\"configureComponent\\\"\\n          [componentConfig]=\\\"layoutConfig.component\\\"\\n        ></dl-dynamic-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"layoutConfig.children\\\">\\n    <!-- If layout has children and is editing, display the children in\\n      as-split to let the user change the size of the layout -->\\n    <as-split\\n      fxFlex\\n      *ngIf=\\\"editingMode\\\"\\n      [direction]=\\\"layoutConfig.children.column ? 'vertical' : 'horizontal'\\\"\\n      (dragEnd)=\\\"resizeEnd($event)\\\"\\n    >\\n      <as-split-area [size]=\\\"layoutConfig.children.split\\\">\\n        <dl-dynamic-layout\\n          fxFlex\\n          [pageId]=\\\"pageId\\\"\\n          [editingMode]=\\\"editingMode\\\"\\n          [childLayout]=\\\"true\\\"\\n          [layoutConfig]=\\\"layoutConfig.children.first\\\"\\n          (deleteSelf)=\\\"deleteChild(true)\\\"\\n        ></dl-dynamic-layout>\\n      </as-split-area>\\n      <as-split-area [size]=\\\"100 - layoutConfig.children.split\\\">\\n        <dl-dynamic-layout\\n          fxFlex\\n          [pageId]=\\\"pageId\\\"\\n          [editingMode]=\\\"editingMode\\\"\\n          [childLayout]=\\\"true\\\"\\n          [layoutConfig]=\\\"layoutConfig.children.second\\\"\\n          (deleteSelf)=\\\"deleteChild(false)\\\"\\n        ></dl-dynamic-layout>\\n      </as-split-area>\\n    </as-split>\\n\\n    <ng-container *ngIf=\\\"!editingMode\\\">\\n      <!-- If layout has children but is not editing, display normal divs according to the size -->\\n      <div [fxLayout]=\\\"layoutConfig.children.column ? 'column' : 'row'\\\">\\n        <div [fxFlex]=\\\"layoutConfig.children.split\\\">\\n          <dl-dynamic-layout\\n            fxFlex\\n            [pageId]=\\\"pageId\\\"\\n            [editingMode]=\\\"editingMode\\\"\\n            [layoutConfig]=\\\"layoutConfig.children.first\\\"\\n          ></dl-dynamic-layout>\\n        </div>\\n        <div [fxFlex]=\\\"100 - layoutConfig.children.split\\\">\\n          <dl-dynamic-layout\\n            fxFlex\\n            [pageId]=\\\"pageId\\\"\\n            [editingMode]=\\\"editingMode\\\"\\n            [layoutConfig]=\\\"layoutConfig.children.second\\\"\\n          ></dl-dynamic-layout>\\n        </div>\\n      </div>\\n    </ng-container>\\n  </ng-container>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DynamicLayoutConfig } from '../../state/page-layout.model';\nimport * as fromLayout from '../../state/page-layout.reducer';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport * as _ from 'lodash';\nimport { ComponentResolverService } from '../../services/component-resolver.service';\n\n@Component({\n  selector: 'dl-dynamic-layout',\n  templateUrl: './dynamic-layout.component.html',\n  styleUrls: ['./dynamic-layout.component.css']\n})\nexport class DynamicLayoutComponent implements OnInit {\n  @Input()\n  pageId: string;\n\n  @Input()\n  layoutConfig: DynamicLayoutConfig = this.initialLayout();\n\n  /** Whether this layout is a child of another dynamic-layout, and thus can be eliminated */\n  @Input()\n  childLayout = false;\n\n  @Input()\n  editingMode: boolean;\n  configureComponent = false;\n\n  @Output()\n  deleteSelf = new EventEmitter<any>();\n\n  pageVariableName$: Observable<string[]>;\n  availableComponents$: Observable<string[]>;\n\n  constructor(\n    private store: Store<fromLayout.LayoutState>,\n    private componentResolver: ComponentResolverService\n  ) {}\n\n  ngOnInit() {\n    this.pageVariableName$ = this.store.select(\n      fromLayout.selectVariablesNames(this.pageId)\n    );\n    this.availableComponents$ = this.store.select(\n      fromLayout.selectAvailableComponents\n    );\n  }\n\n  initialLayout(): DynamicLayoutConfig {\n    return {\n      component: null\n    };\n  }\n\n  splitLayout(column: boolean) {\n    const componentConfig = _.cloneDeep(this.layoutConfig);\n    this.layoutConfig.children = {\n      split: 50,\n      column: column,\n      first: componentConfig,\n      second: this.initialLayout()\n    };\n\n    this.layoutConfig.component = null;\n  }\n\n  deleteChild(first: boolean) {\n    const childToCopy = first\n      ? this.layoutConfig.children.second\n      : this.layoutConfig.children.first;\n\n    for (const key of Object.keys(this.layoutConfig)) {\n      this.layoutConfig[key] = childToCopy[key];\n    }\n  }\n\n  resizeEnd(event) {\n    this.layoutConfig.children.split = event.sizes[0];\n  }\n\n  selectComponent(selectedComponent: string) {\n    this.layoutConfig.component = selectedComponent\n      ? { type: selectedComponent }\n      : null;\n  }\n\n  isComponentConfigurable(): boolean {\n    return (\n      this.layoutConfig.component &&\n      this.componentResolver.isComponentConfigurable(\n        this.layoutConfig.component.type\n      )\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R5bmFtaWMtbGF5b3V0L2NvbnRhaW5lcnMvcGFnZS1jb250YWluZXIvcGFnZS1jb250YWluZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div\\n  *ngIf=\\\"pageLayout\\\"\\n  fxFlex\\n  fxLayout=\\\"column\\\"\\n  fxLayoutAlign=\\\"center stretch\\\"\\n  fxLayoutGap=\\\"8px\\\"\\n>\\n  <dl-editing-toolbar\\n    [editingMode]=\\\"editingMode\\\"\\n    (turnOnEditing)=\\\"turnEditingOn()\\\"\\n    (saveLayoutChanges)=\\\"saveLayoutChanges(pageLayout)\\\"\\n    (discardLayoutChanges)=\\\"discardChanges()\\\"\\n  ></dl-editing-toolbar>\\n  <dl-dynamic-layout\\n    fxFlex\\n    [pageId]=\\\"page\\\"\\n    [editingMode]=\\\"editingMode\\\"\\n    [layoutConfig]=\\\"pageLayout.layout\\\"\\n  ></dl-dynamic-layout>\\n</div>\\n\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport * as fromLayout from '../../state/page-layout.reducer';\nimport { Store } from '@ngrx/store';\nimport { PageLayout } from '../../state/page-layout.model';\nimport {\n  LoadPageLayout,\n  UpdatePageLayout\n} from '../../state/page-layout.actions';\nimport { Dictionary } from '@ngrx/entity';\nimport * as _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'dl-page-container',\n  templateUrl: './page-container.component.html',\n  styleUrls: ['./page-container.component.css']\n})\nexport class PageContainerComponent implements OnInit, OnDestroy {\n  @Input()\n  page: string;\n\n  pageLayout: PageLayout;\n  backupPageLayout: PageLayout;\n  editingMode = false;\n\n  subscription: Subscription;\n\n  constructor(private store: Store<fromLayout.LayoutState>) {}\n\n  ngOnInit() {\n    this.store.dispatch(new LoadPageLayout({ pageId: this.page }));\n    this.subscription = this.store\n      .select(fromLayout.selectPageById(this.page))\n      .subscribe(layout => (this.pageLayout = layout));\n  }\n\n  turnEditingOn() {\n    this.backupPageLayout = _.cloneDeep(this.pageLayout);\n    this.toggleEditingMode();\n  }\n\n  toggleEditingMode() {\n    this.editingMode = !this.editingMode;\n  }\n\n  saveLayoutChanges(pageLayout: PageLayout) {\n    this.store.dispatch(\n      new UpdatePageLayout({\n        pageLayout: {\n          id: pageLayout.id,\n          changes: pageLayout\n        }\n      })\n    );\n\n    this.backupPageLayout = null;\n    this.toggleEditingMode();\n  }\n\n  discardChanges() {\n    this.pageLayout = this.backupPageLayout;\n    this.toggleEditingMode();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromPageLayout from './state/page-layout.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatAutocompleteModule,\n  MatOptionModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatToolbarModule,\n  MatDialogModule,\n  MatTabsModule,\n  MatSlideToggleModule,\n  MatSidenavModule,\n  MatListModule\n} from '@angular/material';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AngularSplitModule } from 'angular-split';\nimport { PageLayoutEffects } from './state/page-layout.effects';\nimport { PageContainerComponent } from './containers/page-container/page-container.component';\nimport { DynamicLayoutComponent } from './containers/dynamic-layout/dynamic-layout.component';\nimport { DynamicContainerComponent } from './containers/dynamic-container/dynamic-container.component';\nimport { ComponentConfigComponent } from './containers/component-config/component-config.component';\nimport { ComponentContainerComponent } from './containers/component-container/component-container.component';\nimport { EditingToolbarComponent } from './components/editing-toolbar/editing-toolbar.component';\nimport { HostDirective } from './host.directive';\nimport { NewVariableComponent } from './components/new-variable/new-variable.component';\nimport { ConfigurableTabsComponent } from './components/configurable/configurable-tabs/configurable-tabs.component';\nimport { ConfigurableSidenavComponent } from './components/configurable/configurable-sidenav/configurable-sidenav.component';\n\n@NgModule({\n  declarations: [\n    PageContainerComponent,\n    DynamicLayoutComponent,\n    DynamicContainerComponent,\n    ComponentConfigComponent,\n    ComponentContainerComponent,\n    EditingToolbarComponent,\n    HostDirective,\n    NewVariableComponent,\n    ConfigurableTabsComponent,\n    ConfigurableSidenavComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularSplitModule.forRoot(),\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatTabsModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatListModule,\n    MatFormFieldModule,\n    FlexLayoutModule,\n    DragDropModule,\n    StoreModule.forFeature('pageLayout', fromPageLayout.reducer),\n    EffectsModule.forFeature([PageLayoutEffects])\n  ],\n  exports: [\n    PageContainerComponent,\n    DynamicContainerComponent,\n    ComponentContainerComponent,\n    EditingToolbarComponent,\n    ConfigurableSidenavComponent\n  ],\n  entryComponents: [\n    NewVariableComponent,\n    ConfigurableTabsComponent,\n    ConfigurableSidenavComponent\n  ]\n})\nexport class DynamicLayoutModule {}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[host]'\n})\nexport class HostDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  Type,\n  ComponentFactory\n} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentResolverService {\n  constructor(private componentResolverFactory: ComponentFactoryResolver) {}\n\n  getComponentFactory(componentName: string): ComponentFactory<any> {\n    const factories = Array.from(\n      this.componentResolverFactory['_factories'].keys()\n    );\n    const factoryClass = <Type<any>>(\n      factories.find((x: any) => x.name === componentName)\n    );\n\n    return this.componentResolverFactory.resolveComponentFactory(factoryClass);\n  }\n\n  isComponentConfigurable(componentName: string) {\n    return this.getComponentFactory(componentName).selector.startsWith(\n      'dl-configurable'\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PageLayout } from '../state/page-layout.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageLayoutService {\n  constructor() {}\n\n  public getPageLayout(pageId: string): Observable<PageLayout> {\n    return of({\n      id: 'id1',\n      variables: {\n        myvariable: 'nothing'\n      },\n      layout: {\n        component: {\n          type: 'ExampleComponent',\n          bindings: {\n            inputs: {},\n            outputs: {}\n          }\n        }\n      }\n    });\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { PageLayout } from './page-layout.model';\n\nexport enum PageLayoutActionTypes {\n  AddNewVariable = '[PageLayout] Add New Variable',\n  LoadPageLayout = '[PageLayout] Load PageLayout',\n  LoadPageLayoutSucces = '[PageLayout] Load PageLayout Success',\n  AddPageLayout = '[PageLayout] Add PageLayout',\n  UpsertPageLayout = '[PageLayout] Upsert PageLayout',\n  AddPageLayouts = '[PageLayout] Add PageLayouts',\n  UpsertPageLayouts = '[PageLayout] Upsert PageLayouts',\n  UpdatePageLayout = '[PageLayout] Update PageLayout',\n  UpdatePageLayouts = '[PageLayout] Update PageLayouts',\n  DeletePageLayout = '[PageLayout] Delete PageLayout',\n  DeletePageLayouts = '[PageLayout] Delete PageLayouts',\n  ClearPageLayouts = '[PageLayout] Clear PageLayouts',\n  UpdateVariableValue = '[PageLayout] Update Variable Value'\n}\n\n\nexport class AddNewVariable implements Action {\n  readonly type = PageLayoutActionTypes.AddNewVariable;\n\n  constructor(public payload: { pageId: string; variableName: string }) {}\n}\n\nexport class LoadPageLayout implements Action {\n  readonly type = PageLayoutActionTypes.LoadPageLayout;\n\n  constructor(public payload: { pageId: string }) {}\n}\n\nexport class LoadPageLayoutSuccess implements Action {\n  readonly type = PageLayoutActionTypes.LoadPageLayoutSucces;\n\n  constructor(public payload: { pageLayout: PageLayout }) {}\n}\n\nexport class AddPageLayout implements Action {\n  readonly type = PageLayoutActionTypes.AddPageLayout;\n\n  constructor(public payload: { pageLayout: PageLayout }) {}\n}\n\nexport class UpsertPageLayout implements Action {\n  readonly type = PageLayoutActionTypes.UpsertPageLayout;\n\n  constructor(public payload: { pageLayout: PageLayout }) {}\n}\n\nexport class AddPageLayouts implements Action {\n  readonly type = PageLayoutActionTypes.AddPageLayouts;\n\n  constructor(public payload: { pageLayouts: PageLayout[] }) {}\n}\n\nexport class UpsertPageLayouts implements Action {\n  readonly type = PageLayoutActionTypes.UpsertPageLayouts;\n\n  constructor(public payload: { pageLayouts: PageLayout[] }) {}\n}\n\nexport class UpdatePageLayout implements Action {\n  readonly type = PageLayoutActionTypes.UpdatePageLayout;\n\n  constructor(public payload: { pageLayout: Update<PageLayout> }) {}\n}\n\nexport class UpdatePageLayouts implements Action {\n  readonly type = PageLayoutActionTypes.UpdatePageLayouts;\n\n  constructor(public payload: { pageLayouts: Update<PageLayout>[] }) {}\n}\n\nexport class DeletePageLayout implements Action {\n  readonly type = PageLayoutActionTypes.DeletePageLayout;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeletePageLayouts implements Action {\n  readonly type = PageLayoutActionTypes.DeletePageLayouts;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearPageLayouts implements Action {\n  readonly type = PageLayoutActionTypes.ClearPageLayouts;\n}\n\nexport class UpdateVariableValue implements Action {\n  readonly type = PageLayoutActionTypes.UpdateVariableValue;\n\n  constructor(\n    public payload: { pageId: string; variableName: string; variableValue: any }\n  ) {}\n}\n\nexport type PageLayoutActions =\n  | AddNewVariable\n  | LoadPageLayout\n  | LoadPageLayoutSuccess\n  | AddPageLayout\n  | UpsertPageLayout\n  | AddPageLayouts\n  | UpsertPageLayouts\n  | UpdatePageLayout\n  | UpdatePageLayouts\n  | DeletePageLayout\n  | DeletePageLayouts\n  | ClearPageLayouts\n  | UpdateVariableValue;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport { PageLayoutService } from '../services/page-layout.service';\nimport {\n  PageLayoutActionTypes,\n  LoadPageLayout,\n  LoadPageLayoutSuccess\n} from './page-layout.actions';\nimport { switchMap, map, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class PageLayoutEffects {\n  @Effect()\n  loadPageLayout = this.actions$.pipe(\n    ofType<LoadPageLayout>(PageLayoutActionTypes.LoadPageLayout),\n    switchMap(action =>\n      this.pageLayoutService.getPageLayout(action.payload.pageId)\n    ),\n    map(pageLayout => new LoadPageLayoutSuccess({ pageLayout }))\n  );\n\n  constructor(\n    private actions$: Actions,\n    private pageLayoutService: PageLayoutService\n  ) {}\n}\n","import { Dictionary } from '@ngrx/entity';\n\nexport interface PageLayout {\n  id: string;\n  variables: Dictionary<any>;\n\n  layout: DynamicLayoutConfig;\n}\n\nexport interface ComponentConfig {\n  type: string;\n\n  bindings?: {\n    inputs: Dictionary<Binding>;\n    outputs: Dictionary<Binding>;\n  };\n}\n\nexport interface LayoutConfig<CHILDREN_CONFIG> extends ComponentConfig {\n  children: Array<{\n    config: CHILDREN_CONFIG;\n    component: DynamicLayoutConfig;\n  }>;\n}\n\n/** A dynamic layout either contains a single component or contains two children dynamic layouts */\nexport interface DynamicLayoutConfig {\n  component?: ComponentConfig;\n\n  children?: {\n    column: boolean;\n    split: number;\n\n    first: DynamicLayoutConfig;\n    second: DynamicLayoutConfig;\n  };\n}\n\nexport interface Binding {\n  type: BindingType;\n  value: string;\n}\n\nexport enum BindingType {\n  CONSTANT,\n  VARIABLE\n}\n\nexport interface ConfigurableLayout<CHILDREN_CONFIG> {\n  initComponent: (\n    pageId: string,\n    layoutConfig: LayoutConfig<CHILDREN_CONFIG>\n  ) => void;\n  setEditingMode: (editingMode: boolean) => void;\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { PageLayout } from './page-layout.model';\nimport {\n  PageLayoutActions,\n  PageLayoutActionTypes\n} from './page-layout.actions';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\nexport interface LayoutState extends EntityState<PageLayout> {\n  // additional entities state properties\n  availableComponents: string[];\n}\n\nexport const adapter: EntityAdapter<PageLayout> = createEntityAdapter<\n  PageLayout\n>();\n\nexport const initialState: LayoutState = adapter.getInitialState({\n  // additional entity state properties\n  availableComponents: [\n    'ExampleComponent',\n    'ExampleInputComponent',\n    'ConfigurableTabsComponent',\n    'ConfigurableSidenavComponent'\n  ]\n});\n\nexport function reducer(\n  state = initialState,\n  action: PageLayoutActions\n): LayoutState {\n  switch (action.type) {\n    case PageLayoutActionTypes.AddNewVariable: {\n      return adapter.updateOne(\n        {\n          id: action.payload.pageId,\n          changes: {\n            variables: {\n              ...state.entities[action.payload.pageId].variables,\n              [action.payload.variableName]: null\n            }\n          }\n        },\n        state\n      );\n    }\n\n    case PageLayoutActionTypes.AddPageLayout: {\n      return adapter.addOne(action.payload.pageLayout, state);\n    }\n\n    case PageLayoutActionTypes.UpsertPageLayout: {\n      return adapter.upsertOne(action.payload.pageLayout, state);\n    }\n\n    case PageLayoutActionTypes.AddPageLayouts: {\n      return adapter.addMany(action.payload.pageLayouts, state);\n    }\n\n    case PageLayoutActionTypes.UpsertPageLayouts: {\n      return adapter.upsertMany(action.payload.pageLayouts, state);\n    }\n\n    case PageLayoutActionTypes.UpdateVariableValue: {\n      return adapter.updateOne(\n        {\n          id: action.payload.pageId,\n          changes: {\n            variables: {\n              [action.payload.variableName]: action.payload.variableValue\n            }\n          }\n        },\n        state\n      );\n    }\n\n    case PageLayoutActionTypes.UpdatePageLayout: {\n      return adapter.updateOne(action.payload.pageLayout, state);\n    }\n\n    case PageLayoutActionTypes.UpdatePageLayouts: {\n      return adapter.updateMany(action.payload.pageLayouts, state);\n    }\n\n    case PageLayoutActionTypes.DeletePageLayout: {\n      return adapter.removeOne(action.payload.id, state);\n    }\n\n    case PageLayoutActionTypes.DeletePageLayouts: {\n      return adapter.removeMany(action.payload.ids, state);\n    }\n\n    case PageLayoutActionTypes.LoadPageLayoutSucces: {\n      return adapter.addOne(action.payload.pageLayout, state);\n    }\n\n    case PageLayoutActionTypes.ClearPageLayouts: {\n      return adapter.removeAll(state);\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const selectLayout = createFeatureSelector<LayoutState>('pageLayout');\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal\n} = adapter.getSelectors(selectLayout);\n\nexport const selectPageById = (pageId: string) =>\n  createSelector(\n    selectEntities,\n    entities => entities[pageId]\n  );\n\nexport const selectAvailableComponents = createSelector(\n  selectLayout,\n  state => state.availableComponents\n);\n\nexport const selectVariablesNames = (pageId: string) =>\n  createSelector(\n    selectPageById(pageId),\n    page => Object.keys(page.variables)\n  );\n\nexport const selectVariableValue = (pageId: string, variableName: string) =>\n  createSelector(\n    selectPageById(pageId),\n    page => page.variables[variableName]\n  );\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1wbGUtaW5wdXQvZXhhbXBsZS1pbnB1dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<button (click)=\\\"sendNumber()\\\">holaaa</button>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-example-input',\n  templateUrl: './example-input.component.html',\n  styleUrls: ['./example-input.component.css']\n})\nexport class ExampleInputComponent implements OnInit {\n  @Output()\n  valueChanges = new EventEmitter<number>();\n  number = 0;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  sendNumber() {\n    this.number++;\n    this.valueChanges.emit(this.number);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1wbGUvZXhhbXBsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"{{exampleInput}}\\n\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit {\n  @Input()\n  exampleInput: string;\n\n  @Output()\n  exampleOutput = new EventEmitter<any>();\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}